1.1 See the updated example that handles negative input.

1.2

% lua54 -l./twice -e "print(twice(4))"
8.0

% lua54
Lua 5.4.7  Copyright (C) 1994-2024 Lua.org, PUC-Rio
> dofile("./twice.lua")
> twice(4)
8.0
>

1.3 Haskell

1.4

The first three and NULL are valid.

- end is not valid because it is a reserved word.
- until? is not valid because '?' is an invalid variable character.
- nil is not valid because it is a reserved word.
- one-step is not valid because '-' is an invalid variable character.

1.5

It's false because type() always returns a string.

1.6

See is_boolean function in is_boolean.lua


1.7

The parentheses are not necessary because the precedence of logical operators in
lua is: 1. not, 2. and, 3. or.

1.8

See the myname.lua script.
